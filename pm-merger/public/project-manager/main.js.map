{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/project/project.component.css","webpack:///./src/app/components/project/project.component.html","webpack:///./src/app/components/project/project.component.ts","webpack:///./src/app/components/task/add/add.component.css","webpack:///./src/app/components/task/add/add.component.html","webpack:///./src/app/components/task/add/add.component.ts","webpack:///./src/app/components/task/update/update.component.css","webpack:///./src/app/components/task/update/update.component.html","webpack:///./src/app/components/task/update/update.component.ts","webpack:///./src/app/components/task/view/view.component.css","webpack:///./src/app/components/task/view/view.component.html","webpack:///./src/app/components/task/view/view.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/filter.pipe.ts","webpack:///./src/app/findprojectname.pipe.ts","webpack:///./src/app/findtaskname.pipe.ts","webpack:///./src/app/findusername.pipe.ts","webpack:///./src/app/project.service.ts","webpack:///./src/app/project.ts","webpack:///./src/app/task.service.ts","webpack:///./src/app/task.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,gMAAgM,WAAW,yCAAyC,k4C;;;;;;;;;;;;;;;;;;;;;ACA1M;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACN;AACY;AACT;AAAA,CAAC;AACL;AACW;AAE9D,cAAc;AACiC;AACkB;AACS;AACP;AACG;AACM;AAC5E,kBAAkB;AAI6B;AACY;AACjB;AACmB;AACN;AACA;AACO;AAE9D,gBAAgB;AACuC;AACvD,IAAM,MAAM,GAAU;IACpB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAC;IACxC,EAAE,IAAI,EAAE,SAAS,EAAC,SAAS,EAAE,sFAAgB,EAAC;IAC9C,EAAE,IAAI,EAAE,SAAS,EAAC,SAAS,EAAE,+EAAY,EAAC;IAC1C,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,mFAAa,EAAC;IAC5C,EAAE,IAAI,EAAE,gBAAgB,EAAC,SAAS,EAAE,yFAAe,EAAC;CACrD;AA+BD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA5BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAa;gBACb,sFAAgB;gBAChB,+EAAY;gBACZ,mFAAa;gBACb,yFAAe;gBACf,wDAAU;gBACV,oEAAgB;gBAChB,oEAAgB;gBAChB,0EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,4EAAmB,CAAC,OAAO,EAAE;gBAC7B,2EAAkB,CAAC,OAAO,EAAE;gBAC5B,2DAAW;gBACX,sEAAgB;gBAChB,oEAAS;gBACT,gEAAkB;gBAClB,iEAAkB;aACnB;YACD,SAAS,EAAE,EAAE;YACX,OAAO,EAAG,CAAC,oEAAsB,CAAC;YACpC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjEtB,mB;;;;;;;;;;;ACAA,+GAA+G,gBAAgB,yCAAyC,0/BAA0/B,63CAA63C,uBAAuB,k0BAAk0B,iBAAiB,oaAAoa,6NAA6N,+OAA+O,oHAAoH,2KAA2K,kCAAkC,aAAa,yEAAyE,yNAAyN,aAAa,uNAAuN,aAAa,wSAAwS,qYAAqY,2CAA2C,qBAAqB,kBAAkB,cAAc,6BAA6B,wCAAwC,6BAA6B,sCAAsC,6BAA6B,eAAe,6BAA6B,2CAA2C,qpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjjM;AAEV;AACe;AAEN;AACN;AAIM;AAClB;AACS;AACQ;AACe;AACtB;AAQzC;IACE,0BAAoB,MAAc,EAAU,oBAA0C,EAC3E,WAAwB,EAAU,cAA8B,EACjE,QAAkB;QAFR,WAAM,GAAN,MAAM,CAAQ;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAC3E,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACjE,aAAQ,GAAR,QAAQ,CAAU;QAE1B,eAAU,GAAG,IAAI,gDAAO,EAAE,CAAC;QAC3B,cAAS,GAAG,KAAK,CAAC;QAKlB,kBAAa,GAAO,EAAE,CAAC;QACvB,gBAAW,GAAO,EAAE,CAAC;QAIvB,mBAAc,GAAmC,IAAI,CAAC;IAbtB,CAAC;IAiBjC,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAGF,kCAAO,GAAP;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aACrC,SAAS,CACR,UAAC,IAAS;YACR,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,+CAAoB,GAApB;QAAA,iBAUE;QATA,IAAI,CAAC,MAAM,GAAG,UAAC,KAAyB;YACxC,YAAK,CAAC,IAAI,CACR,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,cAAI,IAAI,WAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC5B,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAA5D,CAA4D,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAD9F,CAC8F,CAAC,CAC5G;QAJD,CAIC,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,UAAC,CAAuB;YACvC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC;IACH,CAAC;IAIF,uCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAGF,qCAAU,GAAV;QACE;;;;oEAI4D;QAL9D,iBAgBC;QATC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvD,iBAAO;YACP,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,2BAA2B,EAC1D,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5C,CAAC,EAAE,eAAK;YACV,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE,CAAC;IACrB,CAAC;IAED,wCAAa,GAAb;QAAA,iBAcA;QAbC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,UAAU,CAAC;aACjE,SAAS,CAER,iBAAO;YACL,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,4BAA4B,EAC3D,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CACH,CAAC;QACF,QAAQ,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,wCAAa,GAAb,UAAc,EAAE;QAAhB,iBAaC;QAZC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC;aACpC,SAAS,CAER,iBAAO;YACL,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,6BAA6B,EAC5D,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CACJ,CAAC;QACF,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAEA,mCAAQ,GAAR,UAAS,EAAE;QAAX,iBAOC;QALC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,qHAAqH;QACxH,6HAA6H;QAC7H,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,CAAC;aAClC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,UAAU,GAAG,OAAO,EAAzB,CAAyB,CAAC,CAAC;IACtD,CAAC;IAED,sCAAW,GAAX,UAAY,GAAG;QAAf,iBAoBA;QAlBC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACjB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAChB,CAAC;YACK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC;iBAC/D,SAAS,CACV,qBAAW;gBACX,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CACJ,CAAC;YAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;iBAC3C,SAAS,CACV,qBAAW;gBACX,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAzIY,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAG4B,uDAAM,EAAgC,4EAAoB;YAC9D,yDAAW,EAA0B,+DAAc;YACvD,wDAAQ;OAHjB,gBAAgB,CA0I5B;IAAD,uBAAC;CAAA;AA1I4B;;;;;;;;;;;;ACvB7B,mB;;;;;;;;;;;ACAA,qGAAqG,gBAAgB,yCAAyC,otBAAotB,iBAAiB,yUAAyU,8oCAA8oC,kBAAkB,uuBAAuuB,iBAAiB,+TAA+T,seAAse,0jDAA0jD,iBAAiB,6PAA6P,kK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/pL;AACT;AAG6B;AACvC;AACS;AACQ;AACe;AAC1B;AACe;AACT;AACe;AACrB;AACe;AAIpD,uCAAuC;AAOvC;IACE,sBACU,oBAA2C,EAC3C,WAAuB,EACvB,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QAJd,yBAAoB,GAApB,oBAAoB,CAAuB;QAC3C,gBAAW,GAAX,WAAW,CAAY;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAGxB,UAAU;QACV,uBAAuB;QACvB,YAAO,GAAS,IAAI,0CAAI,EAAE,CAAC;QAC3B,YAAO,GAAG,IAAI,2CAAI,EAAE,CAAC;QACrB,eAAU,GAAG,IAAI,gDAAO,EAAE,CAAC;QAO3B,mBAAc,GAAmC,IAAI,CAAC;QAOtD,oBAAe,GAAgC,IAAI,CAAC;QAOpD,iBAAY,GAA6B,IAAI,CAAC;IA5BlB,CAAC;IAoC/B,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,kHAAkH;QAClH,oHAAoH;IACtH,CAAC;IAEA,+BAAQ,GAAR;QAAA,iBAOE;QANC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aACrC,SAAS,CACT,UAAC,IAAS;YACR,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,8BAAO,GAAP;QACE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/B,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;;;;;;;kDAYY;IAC5C,CAAC;IAED,0CAAmB,GAAnB;QAAA,iBASE;QARA,IAAI,CAAC,UAAU,GAAE,UAAC,KAAyB;YAC3C,YAAK,CAAC,IAAI,CACR,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,cAAI,IAAI,WAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC1B,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAArD,CAAqD,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EADxF,CACwF,CAAC,CACtG;QAJD,CAIC;QACD,IAAI,CAAC,aAAa,GAAG,UAAC,CAAiB,IAAK,QAAC,CAAC,IAAI,EAAN,CAAM,CAAC;IAEpD,CAAC;IAED,6CAAsB,GAAtB;QAAA,iBASA;QARC,IAAI,CAAC,aAAa,GAAE,UAAC,KAAyB;YAC9C,YAAK,CAAC,IAAI,CACR,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,cAAI,IAAI,WAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC1B,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAD9F,CAC8F,CAAC,CAC5G;QAJD,CAIC;QACD,IAAI,CAAC,gBAAgB,GAAG,UAAC,CAAoB,IAAK,QAAC,CAAC,OAAO,EAAT,CAAS,CAAC;IAE9D,CAAC;IAEA,0CAAmB,GAAnB;QAAA,iBASA;QARC,IAAI,CAAC,MAAM,GAAG,UAAC,KAAyB;YACxC,YAAK,CAAC,IAAI,CACR,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,cAAI,IAAI,WAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC5B,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAA5D,CAA4D,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAD9F,CAC8F,CAAC,CAC5G;QAJD,CAIC,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,UAAC,CAAuB,IAAK,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC;IAC7D,CAAC;IAGD,8BAAO,GAAP;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aACrC,SAAS,CACR,UAAC,IAAS;YACR,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAC3C,SAAS,CACT,UAAC,IAAS;YACR,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACN,CAAC;IArIU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAGiC,4EAAoB;YAC/B,yDAAW;YACV,0DAAW;YACR,gEAAc;YACtB,sDAAM;OANb,YAAY,CAyIxB;IAAD,mBAAC;CAAA;AAzIwB;;;;;;;;;;;;ACzBzB,mB;;;;;;;;;;;ACAA,6GAA6G,gBAAgB,yCAAyC,oUAAoU,wDAAwD,qbAAqb,iBAAiB,sUAAsU,2nCAA2nC,wBAAwB,4uBAA4uB,iBAAiB,mkCAAmkC,8fAA8f,0bAA0b,+CAA+C,mbAAmb,iBAAiB,wRAAwR,8K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv4L;AACJ;AACC;AAK4B;AACvD;AACE;AACC;AACM;AACQ;AACe;AAE/D,kBAAkB;AACmB;AACe;AAEM;AAEN;AAepD;IAIE,yBACU,KAAqB,EACrB,oBAA2C,EAC3C,WAAuB,EACvB,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QALd,UAAK,GAAL,KAAK,CAAgB;QACrB,yBAAoB,GAApB,oBAAoB,CAAuB;QAC3C,gBAAW,GAAX,WAAW,CAAY;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAEtB,gBAAW,GAAG,IAAI,2CAAI,EAAE,CAAC;QAIzB,iBAAY,GAA6B,IAAI,CAAC;QAM9C,oBAAe,GAAgC,IAAI,CAAC;QAOpD,mBAAc,GAAmC,IAAI,CAAC;IAnB5B,CAAC;IAwB7B,kCAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,qCAAW,GAAX;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAC3C,SAAS,CACT,UAAC,IAAS;YACR,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,gDAAsB,GAAtB;QAAA,iBAaA;QAXK,IAAI,CAAC,aAAa,GAAG,UAAC,KAAyB;YAC/C,YAAK,CAAC,IAAI,CACV,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,0DAAG,CAAC,cAAI,IAAI,QAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc;gBAC9C,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAC5B,WAAC,IAAI,QAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAFhE,CAEgE,CAAC,CAC5E;QAND,CAMC,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,UAAC,CAAoB;YAC7C,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QACjB,CAAC,CAAC;IACR,CAAC;IAGA,6CAAmB,GAAnB;QAAA,iBASA;QAPK,IAAI,CAAC,MAAM,GAAG,UAAC,KAAyB;YACxC,YAAK,CAAC,IAAI,CACV,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,cAAI,IAAI,WAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC5B,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAA5D,CAA4D,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAD9F,CAC8F,CAAC,CAC1G;QAJD,CAIC,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,UAAC,CAAuB,IAAK,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC;IACjE,CAAC;IAED,oCAAU,GAAV,UAAW,EAAE;QAGX,qCAAqC;QACrC,mCAAmC;QAJrC,iBAiBG;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACtD,iBAAO;YACP,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EACzD,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAE9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EACrD,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,IAAI;QAER,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEH,kCAAQ,GAAR,UAAS,EAAE;QAEV,gGAAgG;IACjG,CAAC;IAED,iCAAO,GAAP;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aACrC,SAAS,CACR,UAAC,IAAS;YACR,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAW,GAAX,UAAY,GAAG;QAAf,iBA6BC;QA3BC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CACnD,aAAG;gBACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBAEzB;;;;;;;;;;oBAUI;gBAEF,EAAE,EAAC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC/B,KAAI,CAAC,WAAW,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAE1D,EAAE,EAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;oBAC7B,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAEtD,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,CAAC,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IA9IsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,uEAAY;qDAAC;IADnC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMiB,8DAAc;YACE,4EAAoB;YAC/B,0DAAW;YACV,0DAAW;YACR,gEAAc;YACtB,sDAAM;OAVb,eAAe,CAiJ3B;IAAD,sBAAC;CAAA;AAjJ2B;;;;;;;;;;;;ACpC5B,qCAAqC,iCAAiC,GAAG,qCAAqC,uBAAuB,GAAG,sBAAsB,sBAAsB,GAAG,8BAA8B,sBAAsB,GAAG,K;;;;;;;;;;;ACA9O,iHAAiH,gBAAgB,yCAAyC,g/BAAg/B,+RAA+R,whBAAwhB,mTAAmT,mTAAmT,wYAAwY,weAAwe,iDAAiD,gCAAgC,WAAW,+BAA+B,eAAe,+BAA+B,+CAA+C,+BAA+B,wCAAwC,+BAA+B,sCAAsC,mCAAmC,wCAAwC,2rB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzxH;AACpB;AAGe;AACf;AAC6C;AACvD;AACE;AACC;AACM;AACQ;AAGX;AACe;AAEM;AAEN;AAYpD;IAQE,uBAAoB,WAAuB,EACjC,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QAHJ,gBAAW,GAAX,WAAW,CAAY;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAPxB,WAAM,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC/B,WAAM,GAAG,IAAI,4CAAO,EAAU,CAAC;QAW7B,YAAO,GAAG,IAAI,2CAAI,EAAE,CAAC;QAGrB,oBAAe,GAAgC,IAAI,CAAC;IAR1B,CAAC;IAiB7B,gCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,8CAAsB,GAAtB;QAAA,iBAcC;QAZC,IAAI,CAAC,aAAa,GAAG,UAAC,KAAyB;YAC/C,YAAK,CAAC,IAAI,CACR,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,4DAAK,CAAC,KAAI,CAAC,MAAM,CAAC,EAClB,4DAAK,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6DAAM,CAAC,cAAM,QAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAA5B,CAA4B,CAAC,CAAC,CAAC,EACnE,0DAAG,CAAC,cAAI,IAAI,QAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc;gBAC5C,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAC1B,WAAC,IAAI,QAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAFpE,CAEoE,CAAC,CAClF;QARD,CAQC,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,UAAC,CAAoB,IAAK,QAAC,CAAC,OAAO,EAAT,CAAS,CAAC;IAC9D,CAAC;IAED,oCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,6BAAK,GAAL;QAEE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAGD,6CAAqB,GAArB,UAAsB,MAAM,EAAC,GAAG;QAAhC,iBAqBC;QAnBC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAChB,CAAC;YACK,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,MAAM,EAAC,GAAG,CAAC;iBAC5D,SAAS,CACR,qBAAW;gBACb,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CACJ,CAAC;YAAI,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,YAAY,EAAC,GAAG,CAAC,CAAC,SAAS,CACrE,qBAAW;gBACb,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC;IACL,CAAC;IAED,oCAAY,GAAZ;QAAA,iBAOC;QALE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,qBAAW;YACb,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAO,GAAP;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aACrC,SAAS,CACR,UAAC,IAAS;YACR,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAW,GAAX;QAAA,iBAQC;QANC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAC3C,SAAS,CACT,UAAC,IAAS;YACR,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACN,CAAC;IA5GsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,uEAAY;mDAAC;IAHnC,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASgC,0DAAW;YACpB,0DAAW;YACR,gEAAc;YACtB,sDAAM;OAXb,aAAa,CAiHzB;IAAD,oBAAC;CAAA;AAjHyB;;;;;;;;;;;;AC/B1B,mB;;;;;;;;;;;ACAA,uHAAuH,gBAAgB,yCAAyC,gPAAgP,SAAS,qhEAAqhE,uKAAuK,2NAA2N,qGAAqG,yLAAyL,kCAAkC,aAAa,kNAAkN,aAAa,kNAAkN,aAAa,qTAAqT,0TAA0T,wEAAwE,aAAa,2BAA2B,iBAAiB,6BAA6B,gBAAgB,6BAA6B,kBAAkB,gpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr2I;AAEhB;AACe;AACN;AAEoB;AACtB;AAOzC;IAEE,uBAAoB,WAAwB,EAClC,QAAkB,EAClB,oBAA0C,EAC1C,MAAc;QAHJ,gBAAW,GAAX,WAAW,CAAa;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAClB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QAEtB,SAAI,GAAG,IAAI,0CAAI,EAAE,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;IAHQ,CAAC;IAS7B,gCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE9B,CAAC;IAED,mCAAW,GAAX;QACE,QAAQ,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,+BAAO,GAAP;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;aACnC,SAAS,CAAE,iBAAO;YAClB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,wBAAwB,EACvD,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,kCAAU,GAAV;QAAA,iBAUA;QATC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,IAAI,CAAC;aACrD,SAAS,CAAE,iBAAO;YACjB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EACzD,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE;QAAb,iBAUC;QATC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;aAC9B,SAAS,CAAE,iBAAO;YACjB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EACzD,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACR,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAEA,gCAAQ,GAAR,UAAS,EAAE;QAAX,iBAKC;QAHC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC;aAC/B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAQ,GAAR,UAAS,GAAG;QAAZ,iBAqBA;QAnBC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACjB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAChB,CAAC;YACK,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC;iBACzD,SAAS,CACV,kBAAQ;gBACR,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CACJ,CAAC;YACG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;iBACrC,SAAS,CACV,kBAAQ;gBACR,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAvFY,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGiC,yDAAW;YACxB,wDAAQ;YACI,4EAAoB;YAClC,sDAAM;OALb,aAAa,CA0FzB;IAAD,oBAAC;CAAA;AA1FyB;;;;;;;;;;;;;;;;;;;;;;ACd0B;AAKpD;IAAA;IA2BA,CAAC;IA1BC,8BAAS,GAAT,UAAU,KAAU,EAAE,MAAW,EAAE,aAAsB;QACvD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;YACX,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC;YACzB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,YAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAErC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI;oBACpB,mBAAU,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,OAAO;wBACzB,QAAC,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;oBAArF,CAAqF,EAAE,IAAI,CAAC;gBADhG,CACgG,CAAC,CAAC;YACxG,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI;oBACtB,MAAM,CAAC,YAAU,CAAC,IAAI,CAAC,UAAC,OAAO;wBAC7B,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACxF,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;IACH,CAAC;IA1BU,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,UAAU,CA2BtB;IAAD,iBAAC;CAAA;AA3BsB;;;;;;;;;;;;;;;;;;;;;;ACL6B;AAKpD;IAAA;IAMA,CAAC;IAJC,uCAAS,GAAT,UAAU,SAAc,EAAE,QAAc;QACpC,IAAI,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC,cAAI,IAAE,WAAI,CAAC,GAAG,IAAI,SAAS,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAE;IAC9D,CAAC;IALU,mBAAmB;QAH/B,0DAAI,CAAC;YACJ,IAAI,EAAE,iBAAiB;SACxB,CAAC;OACW,mBAAmB,CAM/B;IAAD,0BAAC;CAAA;AAN+B;;;;;;;;;;;;;;;;;;;;;;ACLoB;AAKpD;IAAA;IAMA,CAAC;IAJC,oCAAS,GAAT,UAAU,MAAW,EAAE,KAAW;QAChC,IAAI,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAE,WAAI,CAAC,GAAG,IAAI,MAAM,EAAlB,CAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAE;IACnD,CAAC;IALU,gBAAgB;QAH5B,0DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;SACrB,CAAC;OACW,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;;;;;;;;;;;ACLuB;AAKpD;IAAA;IAMA,CAAC;IAJC,oCAAS,GAAT,UAAU,MAAW,EAAE,KAAW;QAChC,IAAI,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAE,WAAI,CAAC,GAAG,IAAI,MAAM,EAAlB,CAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAE;IACzD,CAAC;IALU,gBAAgB;QAH5B,0DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;SACrB,CAAC;OACW,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AAEoB;AAI/D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKF;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,eAAU,GAAG,gCAAgC,CAAC,CAAE,iBAAiB;IAFjC,CAAC;IAIzC,oCAAW,GAAX,UAAa,OAAgB;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,UAAU,GAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC1E,CAAC;IAED,wCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,GAAC,cAAc,CAAC;IACjE,CAAC;IAED,8CAAqB,GAArB,UAAuB,GAAG;QACxB,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,qBAAgB,GAAK,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,CAAC;IACtC,CAAC;IAED,wCAAe,GAAf,UAAgB,EAAU;QACxB,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,oBAAe,EAAI,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,sCAAa,GAAb,UAAe,EAAU;QACtB,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,uBAAkB,EAAI,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,sCAAa,GAAb,UAAe,EAAU,EAAE,OAAgB;QACzC,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,uBAAkB,EAAI,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAjCU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;ACb3B;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0C;AACoB;AAI/D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKF;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,aAAQ,GAAG,6BAA6B,CAAC,CAAE,iBAAiB;IAF5B,CAAC;IAIzC,8BAAQ,GAAR,UAAU,IAAU;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,QAAQ,GAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,kCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,GAAC,WAAW,CAAC;IACzD,CAAC;IAED,wCAAkB,GAAlB,UAAoB,GAAG;QACrB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,kBAAa,GAAK,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC;IACnC,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAE;QACb,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,qBAAgB,EAAI,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,yCAAmB,GAAnB,UAAoB,EAAE;QACpB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,0BAAqB,EAAI,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,6CAAuB,GAAvB,UAAwB,IAAS,EAAC,EAAO;QACvC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;QACzB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,gCAA2B,IAAI,SAAI,EAAI,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,gCAAU,GAAV,UAAY,EAAU;QACnB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,oBAAe,EAAI,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,gCAAU,GAAV,UAAY,EAAU,EAAE,IAAU;QAChC,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,oBAAe,EAAI,CAAC;QAEhD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IA7CU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CA8CvB;IAAD,kBAAC;CAAA;AA9CuB;;;;;;;;;;;;;ACZxB;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;AAEoB;AAI/D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKF;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,aAAQ,GAAG,6BAA6B,CAAC,CAAE,iBAAiB;IAF5B,CAAC;IAIzC,8BAAQ,GAAR,UAAU,IAAU;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,QAAQ,GAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,kCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,GAAC,WAAW,CAAC;IACzD,CAAC;IAED,wCAAkB,GAAlB,UAAoB,GAAG;QACrB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,kBAAa,GAAK,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC;IACnC,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAE;QACb,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,iBAAY,EAAI,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,CAAC,CAAC;IAClC,CAAC;IAGD,gCAAU,GAAV,UAAY,EAAU;QACnB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,oBAAe,EAAI,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,gCAAU,GAAV,UAAY,EAAU,EAAE,IAAU;QAChC,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,oBAAe,EAAI,CAAC;QAEhD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAlCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CAmCvB;IAAD,kBAAC;CAAA;AAnCuB;;;;;;;;;;;;;ACbxB;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<hr><div class=\\\"container\\\">\\n  <div class=\\\"header clearfix\\\" style=\\\"background-color:#3f75b3\\\">\\n      <h3 class=\\\"text-center\\\">\\n        <font  style=\\\"font-size: 21px;margin: 10;font-family: Verdana, Geneva, sans-serif;\\\" color=\\\"#fff\\\">\\n         <b>Project Manager</b></font></h3>\\n      <nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n          <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                  <a routerLink=\\\"project\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                    Add Project\\n                  </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"addtask\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                      Add Task\\n                    </a>\\n                  </li>\\n                <li class=\\\"nav-item\\\">\\n                  <a routerLink=\\\"user\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                    Add User\\n                  </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                  <a routerLink=\\\"viewtask\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                  View Task\\n                  </a>\\n                </li> \\n            </ul>\\n          </div>\\n        </nav>\\n\\n        \\n  </div>\\n\\n  <div class=\\\"row marketing\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-xs-12\\\"><br>\\n        <flash-messages></flash-messages>\\n        \\n        <router-outlet></router-outlet>\\n    </div>\\n\\n    \\n  </div>\\n\\n  <footer class=\\\"footer\\\">\\n   \\n  </footer>\\n\\n</div> \\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgDatepickerModule } from 'ng2-datepicker';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';;\nimport { NgxTypeaheadModule } from 'ngx-typeahead';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// Componenets\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { ProjectComponent } from './components/project/project.component';\nimport { AddComponent } from './components/task/add/add.component';\nimport { ViewComponent } from './components/task/view/view.component';\nimport { UpdateComponent } from './components/task/update/update.component';\n// Load datepicker\n\n\n\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { FilterPipe} from './filter.pipe';\nimport { FindprojectnamePipe } from './findprojectname.pipe'; \nimport { FindtasknamePipe } from './findtaskname.pipe'; \nimport { FindusernamePipe } from './findusername.pipe'; \nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n// Addind Routes\nimport { RouterModule, Routes } from '@angular/router';\nconst routes:Routes = [\n  {path: 'user', component: UserComponent},\n  { path: 'project',component: ProjectComponent},\n  { path: 'addtask',component: AddComponent},\n  { path: 'viewtask',component: ViewComponent},\n  { path: 'updatetask/:id',component: UpdateComponent}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    ProjectComponent,\n    AddComponent,\n    ViewComponent,\n    UpdateComponent,\n    FilterPipe,\n    FindtasknamePipe,\n    FindusernamePipe,\n    FindprojectnamePipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FlashMessagesModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    NgxTypeaheadModule,\n    NgDatepickerModule\n  ],\n  providers: [],\n    schemas : [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"card\\\">\\n        <h3 class=\\\"text-center\\\">\\n        <font  style=\\\"height:5%;font-size: 14px;font-family: Verdana, Geneva, sans-serif;\\\" \\n        color=\\\"#3f88b3\\\">\\n        <b>Project</b></font></h3>\\n                <hr>\\n    <div class=\\\"card-body\\\">\\n        <form #projectForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Project:</label>\\n        <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" required\\n              [(ngModel)]=\\\"projectObj.project\\\" name=\\\"project\\\" #project=\\\"ngModel\\\">\\n         </div>\\n      </div>\\n      <div [hidden]=\\\"project.valid || project.pristine\\\"\\n      class=\\\"alert alert-danger\\\">\\n         Project is required\\n     </div>\\n\\n   <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-2\\\"></div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"getcheck\\\" name=\\\"getcheck\\\" [(ngModel)] =\\\"showMe\\\">\\n                 <label class=\\\"form-check-label\\\" for=\\\"gridCheck1\\\">\\n                    &nbsp;Set Start and End Date\\n              </label>\\n            </div>\\n        </div>\\n      </div> <!-- *ngIf=\\\"showMe\\\" -->\\n        <div class=\\\"form-group row\\\" *ngIf=\\\"showMe\\\">\\n            <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n          \\n            <div class=\\\"col-sm-4\\\">\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"start_date\\\" id=\\\"start_date\\\"\\n                    [(ngModel)]=\\\"projectObj.start_date\\\" #start_date=\\\"ngModel\\\">\\n            </div>\\n          \\n          <div class=\\\"col-sm-4\\\">\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"end_date\\\" id=\\\"end_date\\\"\\n                [(ngModel)] =\\\"projectObj.end_date\\\" #end_date=\\\"ngModel\\\">\\n                    </div>\\n      \\n    </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n            <div class=\\\"col-sm-6\\\">\\n                  <input type=\\\"range\\\"  class=\\\"form-control\\\" id=\\\"priority\\\" \\n                required\\n              [(ngModel)]=\\\"projectObj.priority\\\" name=\\\"priority\\\" #priority=\\\"ngModel\\\" min=\\\"0\\\" max=\\\"30\\\"\\n               value=\\\"0\\\"   oninput=\\\"amount.value=priority.value\\\">                                                       \\n         Selected Value : \\n         <output id=\\\"amount\\\" name=\\\"amount\\\" for=\\\"priority\\\">{{ projectObj.priority }}</output>\\n\\n           </div>\\n        </div>\\n        <div [hidden]=\\\"priority.valid || priority.pristine\\\"\\n        class=\\\"alert alert-danger\\\">\\n           priority is required\\n       </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Manager :</label>\\n            <div class=\\\"col-sm-6\\\">\\n                 <ng-template #rt let-r=\\\"result.first_name\\\" let-t=\\\"term\\\">\\n                    <ngb-highlight [result]=\\\"r\\\" [term]=\\\"t\\\"></ngb-highlight>\\n                  </ng-template>\\n                  <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"projectObj.manager\\\" [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" \\n                      [inputFormatter]=\\\"formatter\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n         </div>\\n           <div class=\\\"col-sm-2\\\">\\n              <input type=\\\"button\\\" value=\\\"search\\\">\\n          </div>\\n        </div>\\n        \\n      \\n            <div class=\\\"btn-group btn-group-sm\\\">\\n                <span *ngIf=\\\"getCheckID\\\">\\n                <button type=\\\"button\\\"  class=\\\"btn btn-info\\\" (click)=\\\"updateProject()\\\" [disabled]=\\\"!projectForm.form.valid\\\">Update </button> &nbsp;\\n                </span>\\n                <span *ngIf=\\\"!getCheckID\\\">\\n                <button type=\\\"button\\\"  class=\\\"btn btn-info\\\" (click)=\\\"addProject()\\\" [disabled]=\\\"!projectForm.form.valid\\\">Add </button> &nbsp;\\n                </span>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-dark\\\">Reset</button>\\n            </div>\\n       </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"card\\\" >\\n        <div class=\\\"card-body\\\" *ngIf=\\\"projectList; else templateName\\\">\\n\\n    \\n     <div class=\\\"input-group\\\">\\n            <label><b>Search</b> :</label><p>&nbsp;</p>\\n            <span class=\\\"input-group-btn\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\"><p>&nbsp;</p>\\n            </span><p>&nbsp;</p><p>&nbsp;</p>\\n            <br>\\n            <label><b>Sort</b> :</label><p>&nbsp;</p>\\n            <span class=\\\"input-group-btn\\\">\\n                <button id=\\\"sort_start_date\\\" (click)=\\\"getProjects('start_date')\\\"   class=\\\"btn btn-default\\\">Start date</button>\\n              </span> <p>&nbsp;</p><p>&nbsp;</p>\\n              <span class=\\\"input-group-btn\\\">\\n                  <button id=\\\"sort_end_date\\\" (click)=\\\"getProjects('end_date')\\\"  class=\\\"btn btn-default\\\">End Date</button>\\n                </span><p>&nbsp;</p><p>&nbsp;</p>\\n                <span class=\\\"input-group-btn\\\">\\n                    <button id=\\\"sort_priority\\\" (click)=\\\"getProjects('priority')\\\"  class=\\\"btn btn-default\\\">Priority </button>\\n                  </span>\\n    </div>\\n  \\n\\n    <table class=\\\"table table-hover\\\" style =\\\"font-size:12px;\\\">\\n        <thead>\\n        <tr>\\n            <td><b>Project</b></td>\\n            <td><b>Start Date</b></td>\\n            <td><b>End Date</b></td>\\n            <td><b>Priority</b></td>\\n            <td><b>Manager</b></td>\\n            <td colspan=\\\"2\\\"></td>\\n        </tr>\\n        </thead>\\n         <tbody *ngIf=\\\"projectList\\\">\\n      <tr *ngFor=\\\"let ul of projectList | filter : {project: searchText, priority: searchText}; \\n      let i=index;\\\">\\n       <td>{{ ul.project }}</td>\\n                <td>{{ ul.start_date | date:\\\"dd-MMM-yyyy\\\" }}</td>\\n                <td>{{ ul.end_date | date:\\\"dd-MMM-yyyy\\\" }}</td>\\n                <td>{{ ul.priority }}</td>\\n                <td>{{ ul.manager | findusername : usersResult }}</td>\\n                <td>\\n                 <button (click)=\\\"findbyID(ul._id)\\\"  class=\\\"btn btn-info btn-xs\\\">Edit</button>\\n                </td>\\n                <td>\\n                <button (click)=\\\"deleteProject(ul._id)\\\"  class=\\\"btn btn-danger btn-xs\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n      </table>\\n</div>\\n<ng-template #templateName>\\n        <br> <div class=\\\"alert alert-info\\\">\\n                                <div class=\\\"row justify-content-around\\\">\\n                             <p> <b> No Projects Found. </b></p>\\n                      </div>\\n                </div>\\n</ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Project } from '../../project';\nimport { ProjectService } from '../../project.service';\nimport { User } from '../../user';\nimport { UserService } from '../../user.service';\nimport { Location } from '@angular/common';\nimport { FilterPipe } from '../../filter.pipe';\nimport { FindusernamePipe } from '../../findusername.pipe'; \nimport { Observable } from 'rxjs/Observable';\nimport {debounceTime, map} from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\n\nexport class ProjectComponent implements OnInit {\n  constructor(private router: Router, private flashMessagesService: FlashMessagesService,\n     private userService: UserService, private projectService: ProjectService,\n    private location: Location) { }\n\n    projectObj = new Project();\n    submitted = false;\n    sortval : any ;\n    message: string;\n    projectList: Project[];\n    getCheckID  : any;\n    starting_date:any = {};\n    ending_date:any = {};\n\n  search:any;\n  formatter:any;\n  selectedParent:{_id:string, first_name:string} = null;\n  clickedItem:string;\n  usersResult:{_id:string, first_name:string}[];\n  \n  ngOnInit() {\n    this.getProjects(this.sortval);\n    this.ngBootstrapTypeahead();\n    this.getUser();\n   }\n\n   \n  getUser()\n  {\n    return this.userService.getUsersList()\n    .subscribe(\n      (data: any) => {\n        this.usersResult = data;\n        console.log(this.usersResult);\n      });\n  }\n\n\n  ngBootstrapTypeahead(){\n    this.search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n      : this.usersResult.filter(tr => tr.first_name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    );\n    this.formatter = (x: {first_name: string}) => {\n      return x.first_name;\n    };  \n   }\n\n\n\n  selectedItem(item){\n    this.clickedItem=item.item._id;\n    console.log('here we go');\n    console.log(this.clickedItem);\n  }\n\n \n addProject() {\n   /* this.projectObj.start_date = new Date(this.projectObj.start_date);\n    this.projectObj.start_date.toISOString().substring(0, 10);\n\n    this.projectObj.end_date = new Date(this.projectObj.end_date);\n    this.projectObj.end_date.toISOString().substring(0, 10); */\n\n   this.projectService.saveProject(this.projectObj).subscribe(\n      success => {\n      this.flashMessagesService.show('Project added succesfully', \n      { cssClass: 'alert-success', timeout: 3000 });\n        }, error => {\n      this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n      }); \n\n      this.ngOnInit();\n } \n\n updateProject() {\n  this.submitted = true;\n \n  this.projectService.updateProject(this.getCheckID,this.projectObj)\n  .subscribe(\n    \n    success => {\n      this.flashMessagesService.show('Project update succesfully', \n      { cssClass: 'alert-success', timeout: 3000 });\n      }, error => {\n      this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n      }\n   );\n   location.reload();\n}\n\ndeleteProject(id) {\n  this.submitted = true;\n  this.projectService.deleteProject(id)\n  .subscribe(\n    \n    success => {\n      this.flashMessagesService.show('Project deleted succesfully', \n      { cssClass: 'alert-success', timeout: 3000 });\n      }, error => {\n      this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n      }\n  );\n  location.reload();\n}\n\n findbyID(id)\n { \n   this.getCheckID = id;\n     // this.projectObj.end_date = new Date(`${this.ending_date.year}/${this.ending_date.month}/${this.ending_date.day}`);\n  // this.projectObj.start_date = new Date(`${this.starting_date.year}/${this.starting_date.month}/${this.starting_date.day}`);\n  this.projectService.getProjectsById(id)\n      .subscribe(project => this.projectObj = project);\n }\n\n getProjects(val) \n {\n  this.sortval = val;\n    if(this.sortval) \n    {\n          return this.projectService.getSortedProjectsList(this.sortval)\n        .subscribe(\n        projectList => {\n        console.log(projectList);\n        this.projectList = projectList;\n        });\n    }\n    else\n    {   return this.projectService.getProjectsList()\n        .subscribe(\n        projectList => {\n        console.log(projectList);\n        this.projectList = projectList;\n        });\n    }\n}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n    <h3 class=\\\"text-center\\\">\\n    <font  style=\\\"height:5%;font-size: 14px;font-family: Verdana, Geneva, sans-serif;\\\" \\n    color=\\\"#3f88b3\\\">\\n    <b>Add Task</b></font></h3>\\n    <hr>\\n    <div class=\\\"card-body\\\">\\n      <form #taskForm=\\\"ngForm\\\">\\n        \\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Project </label>\\n      <div class=\\\"col-sm-9\\\">\\n            <ng-template #pr let-p=\\\"result\\\" let-r=\\\"term\\\">\\n                <ngb-highlight [result]=\\\"p.project\\\" [term]=\\\"r\\\"></ngb-highlight>\\n            </ng-template>\\n            <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"taskObj.project\\\" [ngbTypeahead]=\\\"searchProject\\\" [resultTemplate]=\\\"pr\\\"\\n           [inputFormatter]=\\\"formatterProject\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n        </div>\\n    </div>\\n   \\n      <div class=\\\"form-group row\\\">\\n         <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\"> </label>\\n           <div class=\\\"col-sm-9\\\">\\n             <div class=\\\"form-check\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck1\\\">\\n                    &nbsp; Parent Task\\n              </label>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Task</label>\\n          <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" required\\n              [(ngModel)]=\\\"taskObj.task\\\" name=\\\"project\\\"  #project=\\\"ngModel\\\">\\n          </div>\\n      </div>\\n      \\n    <div id=\\\"showhide\\\" *ngIf=\\\"!showMe\\\">          \\n         <div class=\\\"form-group row\\\">\\n            <label for=\\\"priority\\\" class=\\\"col-sm-3 col-form-label\\\">Priority</label>\\n                <label class=\\\"col-sm-1 col-form-label\\\">0</label>\\n            <div class=\\\"col-sm-5\\\">\\n              <input type=\\\"range\\\"  class=\\\"form-control\\\" id=\\\"priority\\\" \\n              required\\n            [(ngModel)]=\\\"taskObj.priority\\\" name=\\\"priority\\\" #priority=\\\"ngModel\\\" min=\\\"0\\\" max=\\\"30\\\"\\n             value=\\\"0\\\"   oninput=\\\"amount.value=priority.value\\\">                                                       \\n       Selected Value : \\n       <output id=\\\"amount\\\" name=\\\"amount\\\" for=\\\"priority\\\">{{taskObj.priority}}</output>\\n            </div>\\n            <label class=\\\"col-sm-1 col-form-label\\\">30</label>\\n        </div>\\n        \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"parentTask\\\" class=\\\"col-sm-3 col-form-label\\\">Parent Task</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <ng-template #st let-s=\\\"result\\\" let-t=\\\"term\\\">\\n                    <ngb-highlight [result]=\\\"s.task\\\" [term]=\\\"t\\\"></ngb-highlight>\\n                </ng-template>\\n                <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"taskObj.parent_task\\\" [ngbTypeahead]=\\\"searchTask\\\" [resultTemplate]=\\\"st\\\"\\n               [inputFormatter]=\\\"formatterTask\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n            </div>\\n            \\n        </div>\\n        \\n      <!--  <div class=\\\"form-group row\\\">\\n            <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date</label>\\n            <div class=\\\"col-sm-9\\\">\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:300px;\\\" \\n                (focus)=\\\"start_date.open()\\\" ngbDatepicker \\n                #start_date=\\\"ngbDatepicker\\\" id=\\\"start_date\\\" \\n                name=\\\"start_date\\\" [(ngModel)]=\\\"taskObj.start_date\\\">\\n        </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:300px;\\\" \\n                (focus)=\\\"end_date.open()\\\" ngbDatepicker \\n                #end_date=\\\"ngbDatepicker\\\" id=\\\"end_date\\\"\\n                id=\\\"end_date\\\" name=\\\"end_date\\\" [(ngModel)]=\\\"taskObj.end_date\\\">\\n          </div>\\n          </div>\\n        -->\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date </label>\\n            <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"start_date\\\" id=\\\"start_date\\\"\\n                [(ngModel)]=\\\"taskObj.start_date\\\" #start_date=\\\"ngModel\\\">\\n        </div>\\n        </div>\\n       \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date </label>\\n            <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"end_date\\\" id=\\\"end_date\\\"\\n                [(ngModel)]=\\\"taskObj.end_date\\\" #start_date=\\\"ngModel\\\">\\n          </div>\\n          </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">User</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <ng-template #ur let-u=\\\"result\\\" let-r=\\\"term\\\">\\n            <ngb-highlight [result]=\\\"u.first_name\\\" [term]=\\\"r\\\"></ngb-highlight>\\n          </ng-template>\\n          <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n            [(ngModel)]=\\\"taskObj.user\\\" [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"ur\\\" \\n              [inputFormatter]=\\\"formatter\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n        </div>\\n    </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-3 offset-sm-3\\\">\\n      <button type=\\\"button\\\"  class=\\\"btn btn-info\\\" (click)=\\\"addTask()\\\" \\n      [disabled]=\\\"!taskForm.form.valid\\\">Add </button> &nbsp;\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <button type=\\\"reset\\\" class=\\\"btn btn-dark\\\">Reset</button>\\n    </div>\\n  </div>\\n\\n</form>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport {debounceTime,distinctUntilChanged, map} from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Task } from '../../../task';\nimport { TaskService } from '../../../task.service';\nimport { Project } from '../../../project';\nimport { ProjectService } from '../../../project.service';\nimport { User } from '../../../user';\nimport { UserService } from '../../../user.service';\nimport { Location } from '@angular/common';\nimport { FilterPipe } from '../../../filter.pipe';\nimport { FindtasknamePipe } from '../../../findtaskname.pipe'; \n//import format from 'date-fns/format';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  constructor(\n    private flashMessagesService : FlashMessagesService,\n    private taskService:TaskService, \n    private userService: UserService, \n    private projectService: ProjectService, \n    private router: Router) { }\n\n\n  // Project\n  //taskObj = new Task();\n  taskObj: Task = new Task();\n  userObj = new User();\n  projectObj = new Project();\n  sortval : any ;\n  getCheckID  : any;\n \n\n  search:any;\n  formatter:any;\n  selectedParent:{_id:string, first_name:string} = null;\n  clickedItem:string;\n  usersResult:{_id:string, first_name:string}[];\n\n\n  searchProject:any;\n  formatterProject:any;\n  selectedProject:{_id:string, project:string} = null;\n  clickedItemProject:string;\n  projectsResult:{_id:string, project:string}[];\n\n\n  searchTask:any;\n  formatterTask:any;\n  selectedTask:{_id:string, task:string} = null;\n  clickedItemTask:string;\n  tasksResult:{_id:string, task:string}[];\n\n  setDate : any;\n  start_date:any ;\n  end_date:any ;\n  \nngOnInit() {\n  this.getProjects();\n  this.getUser();\n  this.getTasks();\n  this.TypeaheadUserSearch();\n  this.TypeaheadProjectSearch();\n  this.TypeaheadTaskSearch();\n \n  this.setDate = new Date();\n  //this.taskObj.start_date = (this.setDate.getMonth()+1)+'/'+this.setDate.getDate()+'/'+this.setDate.getFullYear();\n  //this.taskObj.end_date = (this.setDate.getMonth()+1)+'/'+(this.setDate.getDate()+1)+'/'+this.setDate.getFullYear();\n}\n\n getTasks(){\n    return this.taskService.getTasksList()\n    .subscribe(\n     (data: any) => {\n       this.tasksResult = data;\n       console.log(this.tasksResult);\n     });\n  }\n\n  addTask(){\n    alert(this.taskObj.start_date);\n    alert(this.taskObj.end_date); /*\n\n    this.taskService.saveTask(this.taskObj).subscribe(\n        success => {\n        this.flashMessagesService.show('Task added succesfully', \n        { cssClass: 'alert-success', timeout: 3000 });\n        this.ngOnInit();\n        }, error => {\n        this.flashMessagesService.show('Something went wrong', \n        { cssClass: 'alert-danger', timeout: 3000 });\n        }); \n\n        this.router.navigate(['/viewtask']);*/\n  }\n\n  TypeaheadTaskSearch(){\n    this.searchTask= (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n        : this.tasksResult.filter(v => v.task.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n    this.formatterTask = (x: {task: string}) => x.task;\n\n   }\n  \n   TypeaheadProjectSearch(){\n    this.searchProject= (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n        : this.projectsResult.filter(v => v.project.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n    this.formatterProject = (x: {project: string}) => x.project;\n\n  }\n\n   TypeaheadUserSearch(){\n    this.search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n      : this.usersResult.filter(tr => tr.first_name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    );\n    \n    this.formatter = (x: {first_name: string}) => x.first_name;\n  }\n\n\n  getUser()\n  {\n    return this.userService.getUsersList()\n    .subscribe(\n      (data: any) => {\n        this.usersResult = data;\n        console.log(this.usersResult);\n      });\n  }\n\n  getProjects()\n  {\n    return this.projectService.getProjectsList()\n    .subscribe(\n     (data: any) => {\n       this.projectsResult = data;\n       console.log(this.projectsResult);\n     });\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n        <h3 class=\\\"text-center\\\">\\n        <font  style=\\\"height:5%;font-size: 14px;font-family: Verdana, Geneva, sans-serif;\\\" \\n        color=\\\"#3f88b3\\\">\\n        <b>Update Task</b></font></h3>\\n        <hr>\\n    <div class=\\\"card-body\\\">\\n      <form #taskForm=\\\"ngForm\\\">\\n        \\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Project </label>\\n      <div class=\\\"col-sm-9\\\">\\n          <b>{{tasksResult.project | findprojectname : projectsResult}}</b>\\n          <ng-template #pg let-p=\\\"result\\\" let-g=\\\"term\\\">\\n              <ngb-highlight [result]=\\\"p.project\\\" [term]=\\\"g\\\"></ngb-highlight>\\n          </ng-template>\\n          <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n            [(ngModel)]=\\\"tasksResult.project\\\" [ngbTypeahead]=\\\"searchProject\\\" [resultTemplate]=\\\"pg\\\" \\n              [inputFormatter]=\\\"formatterProject\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n     </div>\\n    </div>\\n   \\n      <div class=\\\"form-group row\\\">\\n         <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\"> </label>\\n           <div class=\\\"col-sm-9\\\">\\n             <div class=\\\"form-check\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck1\\\">\\n                    &nbsp; Parent Task\\n              </label>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Task</label>\\n          <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\" required\\n              [(ngModel)]=\\\"tasksResult.task\\\" name=\\\"task\\\"  #task=\\\"ngModel\\\">\\n          </div>\\n      </div>\\n      \\n    <div id=\\\"showhide\\\">          \\n         <div class=\\\"form-group row\\\">\\n            <label for=\\\"priority\\\" class=\\\"col-sm-3 col-form-label\\\">Priority</label>\\n                <label class=\\\"col-sm-1 col-form-label\\\">0</label>\\n            <div class=\\\"col-sm-5\\\">\\n              <input type=\\\"range\\\"  class=\\\"form-control\\\" id=\\\"priority\\\" \\n              required\\n            [(ngModel)]=\\\"tasksResult.priority\\\" name=\\\"priority\\\" #priority=\\\"ngModel\\\" min=\\\"0\\\" max=\\\"30\\\"\\n             value=\\\"0\\\"   oninput=\\\"amount.value=priority.value\\\">                                                       \\n       Selected Value : \\n       <output id=\\\"amount\\\" name=\\\"amount\\\" for=\\\"priority\\\">{{ tasksResult.priority }}</output>\\n            </div>\\n            <label class=\\\"col-sm-1 col-form-label\\\">30</label>\\n        </div>\\n        \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"parentTask\\\" class=\\\"col-sm-3 col-form-label\\\">Parent Task</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <ng-template #st let-s=\\\"result\\\" let-t=\\\"term\\\">\\n                    <ngb-highlight [result]=\\\"s.task\\\" [term]=\\\"t\\\"></ngb-highlight>\\n                </ng-template>\\n                <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"tasksResult.parent_task \\\" [ngbTypeahead]=\\\"searchTask\\\" [resultTemplate]=\\\"st\\\"\\n               [inputFormatter]=\\\"formatterTask\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n            </div>\\n            \\n        </div>\\n   \\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date </label>\\n              <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"start_date\\\" id=\\\"start_date\\\"\\n                  [(ngModel)]=\\\"tasksResult.start_date\\\" #start_date=\\\"ngModel\\\">\\n          </div>\\n          </div>\\n         \\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date </label>\\n              <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"end_date\\\" id=\\\"end_date\\\"\\n                  [(ngModel)]=\\\"tasksResult.end_date\\\" #start_date=\\\"ngModel\\\">\\n            </div>\\n            </div>\\n          \\n      <!--        <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date</label>\\n              <div class=\\\"col-sm-9\\\">\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:300px;\\\" \\n                  (focus)=\\\"start_date.open()\\\" ngbDatepicker \\n                  #start_date=\\\"ngbDatepicker\\\" id=\\\"start_date\\\" \\n                  name=\\\"start_date\\\" [(ngModel)]=\\\"tasksResult.start_date\\\">\\n          </div>\\n          </div>\\n  \\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date</label>\\n              <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:300px;\\\" \\n                  (focus)=\\\"end_date.open()\\\" ngbDatepicker \\n                  #end_date=\\\"ngbDatepicker\\\" id=\\\"end_date\\\"\\n                  id=\\\"end_date\\\" name=\\\"end_date\\\" [(ngModel)]=\\\"tasksResult.end_date\\\">\\n            </div>\\n            </div>-->\\n    </div>\\n\\n <div class=\\\"form-group row\\\">\\n        <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">User</label>\\n        <div class=\\\"col-sm-9\\\">\\n                <b>{{tasksResult.user | findusername : usersResult}}</b>\\n            <ng-template #ur let-u=\\\"result\\\" let-r=\\\"term\\\">\\n                <ngb-highlight [result]=\\\"u.first_name\\\" [term]=\\\"r\\\"></ngb-highlight>\\n            </ng-template>\\n            <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"tasksResult.user\\\" [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"ur\\\" \\n                [inputFormatter]=\\\"formatter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n        </div>\\n    </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-3 offset-sm-3\\\">\\n      <button type=\\\"button\\\"  class=\\\"btn btn-info btn-sm\\\" (click)=\\\"updateTask(tasksResult._id)\\\" \\n      [disabled]=\\\"!taskForm.form.valid\\\">Update </button> &nbsp;\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <a [routerLink]=\\\"['/viewtask']\\\" class=\\\"btn btn-dark btn-sm\\\">Cancel</a>\\n    </div>\\n  </div>\\n\\n</form>\\n</div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n// -- Load Observal\nimport { Observable } from 'rxjs/Observable';\nimport {debounceTime, distinctUntilChanged, filter, map, merge} from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n// -- Load Service\nimport { Task } from '../../../task';\nimport { TaskService } from '../../../task.service';\nimport { Project } from '../../../project';\nimport { ProjectService } from '../../../project.service';\nimport { User } from '../../../user';\nimport { UserService } from '../../../user.service';\nimport { Location } from '@angular/common';\n\n// Load Pipe\nimport { FilterPipe } from '../../../filter.pipe';\nimport { FindtasknamePipe } from '../../../findtaskname.pipe'; \nimport { FindusernamePipe } from '../../../findusername.pipe';\nimport { FindprojectnamePipe } from '../../../findprojectname.pipe'; \n\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  @ViewChild('instance') instance: NgbTypeahead;\n \n\n  constructor(\n    private route: ActivatedRoute,\n    private flashMessagesService : FlashMessagesService,\n    private taskService:TaskService, \n    private userService: UserService, \n    private projectService: ProjectService, \n    private router: Router) { }\n\n    tasksResult = new Task();\n    val : any;\n    searchTask:any;\n    formatterTask:any;\n    selectedTask:{_id:string, task:string} = null;\n    clickedItemTask:string;\n\n    // Project\n    searchProject:any;\n    formatterProject:any;\n    selectedProject:{_id:string, project:string} = null;\n    clickedItemProject:string;\n    projectsResult : any;\n\n    // User\n    search:any;\n    formatter:any;\n    selectedParent:{_id:string, first_name:string} = null;\n    usersResult:{_id:string, first_name:string}[];\n\n\n\n  ngOnInit() \n  {\n    this.getProjects();\n    this.getUser();\n    this.TypeaheadUserSearch();\n    this.TypeaheadProjectSearch();\n    this.getTaskById(this.val);\n   }\n\n   getProjects()\n   {\n     return this.projectService.getProjectsList()\n     .subscribe(\n      (data: any) => {\n        this.projectsResult = data;\n        console.log(this.projectsResult);\n      });\n   }\n\n   TypeaheadProjectSearch()\n   {\n        this.searchProject = (text$: Observable<string>) =>\n        text$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        map(term => (term === '' ? this.projectsResult\n        : this.projectsResult.filter(\n        v => v.project.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\n        );\n        this.formatterProject = (x: {project: string}) => {\n        return x.project;\n        };  \n  }\n\n\n   TypeaheadUserSearch()\n   {\n        this.search = (text$: Observable<string>) =>\n        text$.pipe(\n        debounceTime(200),\n        map(term => term === '' ? []\n        : this.usersResult.filter(tr => tr.first_name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n        );\n        this.formatter = (x: {first_name: string}) => x.first_name;\n  }\n\n  updateTask(id)\n  {\n\n    //alert(this.tasksResult.start_date);\n    //alert(this.tasksResult.end_date);\n    \n      this.taskService.updateTask(id,this.tasksResult).subscribe(\n          success => {\n          this.flashMessagesService.show('Task updated succesfully', \n          { cssClass: 'alert-success', timeout: 3000 });\n          \n          }, error => {\n          this.flashMessagesService.show('Something went wrong', \n          { cssClass: 'alert-danger', timeout: 3000 });\n          }); /**/\n\n          this.router.navigate(['/viewtask']);\n    }\n\n  findbyID(id)\n  { \n   // return this.userService.retriveUsersById(id).subscribe(user => this.tasksResult.user = user);\n  }\n  \n  getUser()\n  {\n    return this.userService.getUsersList()\n    .subscribe(\n      (data: any) => {\n        this.usersResult = data;\n        console.log('usr: '+this.usersResult);\n      });\n  }\n\n  getTaskById(val)\n  { \n    this.route.params.subscribe(params => {\n      this.taskService.getTasksById(params['id']).subscribe(\n        res => {\n          this.tasksResult = res;\n\n        /*  \n          this.tasksResult.start_date = new Date(this.tasksResult.start_date);\n          this.tasksResult.end_date = new Date(this.tasksResult.end_date);\n          \n            if(this.tasksResult.start_date)\n          this.tasksResult.start_date = this.tasksResult.start_date.slice(0,10).split(\"-\").reverse().join(\"/\");\n\n          if(this.tasksResult.end_date)\n          this.tasksResult.end_date = this.tasksResult.end_date.slice(0,10).split(\"-\").reverse().join(\"/\");\n\n          */\n      \n          if(this.tasksResult.start_date)\n          this.tasksResult.start_date = this.tasksResult.start_date;\n\n          if(this.tasksResult.end_date)\n          this.tasksResult.end_date = this.tasksResult.end_date;\n\n          console.log(\" task RES :\" + this.tasksResult); \n          }\n      );\n    });\n  }\n\n}\n","module.exports = \"hr#afterSearchView{\\n    border: 1px dashed dimgrey;\\n}\\n\\n\\ntd#taskCell, td#parentTaskCell{\\n    min-width: 100px;\\n}\\n\\n\\ntd#priorityCell{\\n    min-width: 20px;\\n}\\n\\n\\ntd.dateCell, td.app-btn{\\n    min-width: 40px;\\n}\\n\\n\"","module.exports = \"<div class=\\\"card\\\">\\r\\n        <h3 class=\\\"text-center\\\">\\r\\n        <font  style=\\\"height:5%;font-size: 14px;font-family: Verdana, Geneva, sans-serif;\\\" \\r\\n        color=\\\"#3f88b3\\\">\\r\\n        <b>Task List</b></font></h3>\\r\\n        <hr>\\r\\n        <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"end_date\\\" class=\\\"col-sm-3 text-primary\\\"><strong>Search Project:</strong></label>\\r\\n            <div class=\\\"col-sm-5\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  #instance=\\\"ngbTypeahead\\\" \\r\\n                    (selectItem)=\\\"selectedItem($event)\\\"  [inputFormatter]=\\\"formatterProject\\\"\\r\\n                    [(ngModel)]=\\\"model\\\" [ngbTypeahead]=\\\"searchProject\\\" \\r\\n                    [resultFormatter]=\\\"formatterProject\\\" />\\r\\n            </div> \\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                    <button  type=\\\"button\\\" (click)=\\\"findTaskBySortProject('',model._id)\\\"\\r\\n                     class=\\\"btn btn-info btn-sm\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-search\\\"></span> Search\\r\\n                  </button>\\r\\n                &nbsp;\\r\\n                  <button id=\\\"reset\\\" (click)=\\\"reset()\\\"\\r\\n                  class=\\\"btn btn-warning btn-sm\\\"> Reset </button>\\r\\n             </div>\\r\\n        </div>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"card\\\" >\\r\\n        <div class=\\\"card-body\\\" *ngIf=\\\"tasksResult; else templateName\\\">\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"end_date\\\" class=\\\"col-sm-3 text-primary\\\"><strong>Sort:</strong></label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                    <button type=\\\"button\\\"  (click)=\\\"findTaskBySortProject('start_date',model._id)\\\"\\r\\n                    class=\\\"btn btn-secondary btn-sm\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-triangle-top\\\"></span> Start Date\\r\\n                    </button>\\r\\n                        &nbsp;\\r\\n                    <button type=\\\"button\\\"  (click)=\\\"findTaskBySortProject('end_date',model._id)\\\"\\r\\n                    class=\\\"btn btn-secondary btn-sm\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-sort\\\"></span> End Date\\r\\n                    </button>\\r\\n                    &nbsp;\\r\\n                    <button type=\\\"button\\\"  (click)=\\\"findTaskBySortProject('priority',model._id)\\\"\\r\\n                    class=\\\"btn btn-secondary btn-sm\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-sort\\\"></span> Priority\\r\\n                    </button>\\r\\n                    &nbsp;\\r\\n                    <button type=\\\"button\\\"  (click)=\\\"findTaskBySortProject('completed',model._id)\\\"\\r\\n                    class=\\\"btn btn-secondary btn-sm\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-sort\\\"></span> Completed\\r\\n                    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    <table class=\\\"table table-striped\\\" style =\\\"font-size:12px;\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n           <td><b>Project</b></td> \\r\\n            <td><b>Task</b></td>\\r\\n            <td><b>Priority</b></td>\\r\\n            <td><b>Parent Task</b></td>\\r\\n            <td><b>Start Date</b></td>\\r\\n            <td><b>End Date</b></td>\\r\\n           <!-- <td><b>User</b></td> -->\\r\\n            <td colspan=\\\"2\\\"></td>\\r\\n        </tr>\\r\\n        </thead>\\r\\n         <tbody >\\r\\n      <tr *ngFor=\\\"let ul of tasksResult\\\">\\r\\n            <td>{{ ul.project | findprojectname : projectsResult }}</td> \\r\\n                <td>{{ ul.task }}</td>\\r\\n                <td>{{ ul.priority }}</td>\\r\\n                <td>{{ ul.parent_task | findtaskname : tasksResult }}</td>\\r\\n                <td>{{ ul.start_date | date:\\\"dd-MMM-yyyy\\\" }}</td>\\r\\n                <td>{{ ul.end_date | date:\\\"dd-MMM-yyyy\\\" }}</td>\\r\\n             <!--   <td>{{ ul.user | findusername : usersResult }}</td> -->\\r\\n        \\r\\n                <td><a [routerLink]=\\\"['/updatetask', ul._id]\\\" class='btn btn-info m-r-5px'>\\r\\n                    <span class='glyphicon glyphicon-edit'></span> Edit\\r\\n                </a></td>\\r\\n                <td><button (click)=\\\"deleteTask(ul._id)\\\"  class=\\\"btn btn-danger btn-sm\\\">End Task</button></td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    </table>\\r\\n\\r\\n      \\r\\n</div>\\r\\n<ng-template #templateName>\\r\\n        <br> <div class=\\\"alert alert-info\\\">\\r\\n            <div class=\\\"row justify-content-around\\\">\\r\\n                     <p> <b> Please search projects to filter task.</b></p>\\r\\n            </div>\\r\\n        </div>\\r\\n</ng-template>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\nimport {NgbTypeahead} from '@ng-bootstrap/ng-bootstrap';\nimport {Observable, Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, filter, map, merge} from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Task } from '../../../task';\nimport { TaskService } from '../../../task.service';\nimport { Project } from '../../../project';\nimport { ProjectService } from '../../../project.service';\nimport { User } from '../../../user';\nimport { UserService } from '../../../user.service';\nimport { Location } from '@angular/common';\nimport { FilterPipe } from '../../../filter.pipe';\nimport { FindtasknamePipe } from '../../../findtaskname.pipe'; \nimport { FindprojectnamePipe } from '../../../findprojectname.pipe'; \nimport { FindusernamePipe } from '../../../findusername.pipe'; \n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  tasks:Task[];\n  tasksResult : any;\n  @ViewChild('instance') instance: NgbTypeahead;\n  focus$ = new Subject<string>();\n  click$ = new Subject<string>();\n\n  \n  constructor(private taskService:TaskService, \n    private userService: UserService, \n    private projectService: ProjectService, \n    private router: Router) { }\n\n    public model: any;\n    clickedItem:string;\n\n    taskObj = new Task();\n    searchProject:any;\n    formatterProject:any;\n    selectedProject:{_id:string, project:string} = null;\n    clickedItemProject:string;\n   // projectsResult:{_id:string, project:string}[];\n  \n   usersResult : any;\n   projectsResult : any;\n   getprojectValue : any;\n   sortval : any ;\n\n  ngOnInit() {\n    this.getProjects();\n    this.getUser();\n    this.TypeaheadProjectSearch();\n  }\n\n  TypeaheadProjectSearch()\n  {\n    this.searchProject = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      merge(this.focus$),\n      merge(this.click$.pipe(filter(() => !this.instance.isPopupOpen()))),\n      map(term => (term === '' ? this.projectsResult\n        : this.projectsResult.filter(\n          v => v.project.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\n    );\n\n    this.formatterProject = (x: {project: string}) => x.project;\n  }\n\n  selectedItem(item){\n    this.clickedItem=item.item;\n    console.log(item);\n  }\n\n  reset()\n  {\n    window.location.reload();\n  }\n  \n\n  findTaskBySortProject(sortid,pid) \n  {\n    this.sortval = sortid;\n   console.log('this.sorval' +this.sortval);\n   console.log('not this.sorval' +this.sortval);\n      if(this.sortval) \n      {\n            return this.taskService.getTasksBySortProjectId(sortid,pid)\n          .subscribe(\n            tasksResult => {\n          console.log(tasksResult);\n          this.tasksResult = tasksResult;\n          });\n      }\n      else\n      {    this.taskService.getTasksBySortProjectId('start_date',pid).subscribe(\n          tasksResult => {\n        console.log(tasksResult);\n        this.tasksResult = tasksResult;\n        });\n      }\n  }\n\n  findAllTasks()\n  {\n     return this.taskService.getTasksList().subscribe(\n      tasksResult => {\n    console.log(tasksResult);\n    this.tasksResult = tasksResult;\n    });\n  }\n\n  getUser()\n  {\n    return this.userService.getUsersList()\n    .subscribe(\n      (data: any) => {\n        this.usersResult = data;\n        console.log('user :' + this.usersResult);\n      });\n  }\n\n  getProjects()\n  {\n    return this.projectService.getProjectsList()\n    .subscribe(\n     (data: any) => {\n       this.projectsResult = data;\n       console.log('pro :'+this.projectsResult);\n     });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"card\\\">\\n        <h3 class=\\\"text-center\\\">\\n                <font  style=\\\"height:5%;font-size: 14px;font-family: Verdana, Geneva, sans-serif;\\\" \\n                color=\\\"#3f88b3\\\">\\n                <b>Users </b></font></h3>\\n                <hr>\\n    <div class=\\\"card-body\\\">\\n        <form #userForm=\\\"ngForm\\\">\\n            <p *ngIf=\\\"message\\\" class=\\\"alert alert-success\\\"> {{message}}</p>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"first_name\\\">First Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first_name\\\" \\n                    placeholder=\\\"FirstName\\\"  required\\n                    [(ngModel)]=\\\"user.first_name\\\" name=\\\"first_name\\\" #first_name=\\\"ngModel\\\">\\n                    <div [hidden]=\\\"first_name.valid || first_name.pristine\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        First Name is required\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"lastname\\\">Last Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last_name\\\" placeholder=\\\"LastName\\\"\\n                    required\\n                    [(ngModel)]=\\\"user.last_name\\\" name=\\\"last_name\\\" #last_name=\\\"ngModel\\\">\\n                    <div [hidden]=\\\"last_name.valid || last_name.pristine\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        Last Name is required\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"employeeid\\\">Employee ID</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"employee_id\\\" \\n                    placeholder=\\\"Employee ID\\\"\\n                    required\\n                    [(ngModel)]=\\\"user.employee_id\\\" name=\\\"employee_id\\\" #employee_id=\\\"ngModel\\\">\\n                    <div [hidden]=\\\"employee_id.valid || employee_id.pristine\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         Employee ID is required\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"btn-group btn-group-sm\\\">\\n<span *ngIf=\\\"getCheckID\\\">\\n<button type=\\\"button\\\"  class=\\\"btn btn-info\\\" (click)=\\\"updateUser()\\\" [disabled]=\\\"!userForm.form.valid\\\">Update </button> &nbsp;\\n</span>\\n<span *ngIf=\\\"!getCheckID\\\">\\n<button type=\\\"button\\\"  class=\\\"btn btn-info\\\" (click)=\\\"adduser()\\\" [disabled]=\\\"!userForm.form.valid\\\">Add </button> &nbsp;\\n</span>\\n<button type=\\\"reset\\\" class=\\\"btn btn-dark\\\">Reset</button>\\n                  </div>\\n                </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"card\\\" >\\n        <div class=\\\"card-body\\\" *ngIf=\\\"userList; else templateName\\\">\\n\\n     <div class=\\\"input-group\\\">\\n            <label>Sort :</label><p>&nbsp;</p>\\n            \\n            <span class=\\\"input-group-btn\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\"><p>&nbsp;</p>\\n            </span><p>&nbsp;</p><p>&nbsp;</p>\\n             <span class=\\\"input-group-btn\\\">\\n                <button id=\\\"first_name\\\" (click)=\\\"getUsers('first_name')\\\"   class=\\\"btn btn-default\\\">First Name</button>\\n              </span> <p>&nbsp;</p><p>&nbsp;</p>\\n              <span class=\\\"input-group-btn\\\">\\n                  <button id=\\\"last_name\\\" (click)=\\\"getUsers('last_name')\\\"  class=\\\"btn btn-default\\\">Last Name</button>\\n                </span><p>&nbsp;</p><p>&nbsp;</p>\\n                <span class=\\\"input-group-btn\\\">\\n                    <button id=\\\"employee_id\\\" (click)=\\\"getUsers('employee_id')\\\"  class=\\\"btn btn-default\\\">Employee Id</button>\\n                  </span>\\n          </div>\\n       \\n\\n\\n    <table class=\\\"table table-hover\\\" style =\\\"font-size:12px;\\\">\\n        <thead>\\n        <tr>\\n            <td><b>First Name</b></td>\\n            <td><b>Last Name</b></td>\\n            <td><b>Employee ID</b></td>\\n            <td colspan=\\\"2\\\"></td>\\n        </tr>\\n        </thead>\\n         <tbody *ngIf=\\\"userList\\\">\\n       <tr *ngFor=\\\"let ul of userList | filter : {first_name: searchText, last_name:searchText,  employee_id: searchText}; let i=index;\\\">\\n                <td>{{ ul.first_name }}</td>\\n                <td>{{ ul.last_name }}</td>\\n                <td>{{ ul.employee_id }}</td>\\n                <td>\\n                 <button (click)=\\\"findbyID(ul._id)\\\"  class=\\\"btn btn-info btn-xs\\\">Edit</button>\\n                </td>\\n                <td>\\n                <button (click)=\\\"deleteUser(ul._id)\\\"  class=\\\"btn btn-danger btn-xs\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n      </table>\\n</div>\\n<ng-template #templateName>\\n        <br> <div class=\\\"alert alert-info\\\">\\n                                <div class=\\\"row justify-content-around\\\">\\n                             <p>  <b> No Users Found. </b></p>\\n                      </div>\\n                </div>\\n</ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { User } from '../../user';\nimport { UserService } from '../../user.service';\nimport { Location } from '@angular/common';\nimport { FilterPipe } from '../../filter.pipe';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private location: Location,\n    private flashMessagesService: FlashMessagesService, \n    private router: Router) { }\n\n    user = new User();\n    submitted = false;\n    sortval : any ;\n    message: string;\n    userList: User[];\n    getCheckID  : any;\n\n  ngOnInit() {\n    this.getUsers(this.sortval);\n    \n  }\n\n  pageRefresh() {\n    location.reload();\n }\n\n adduser() {\n   this.submitted = true;\n   this.userService.saveUser(this.user)\n   .subscribe( success => {\n    this.flashMessagesService.show('User added succesfully', \n    { cssClass: 'alert-success', timeout: 3000 });\n    }, error => {\n    this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n    });\n    location.reload();\n }\n\n updateUser() {\n  this.submitted = true;\n  this.userService.updateUser(this.getCheckID,this.user)\n  .subscribe( success => {\n    this.flashMessagesService.show('User updated succesfully', \n    { cssClass: 'alert-success', timeout: 3000 }); \n    }, error => {\n    this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n    });\n    location.reload();\n}\n\ndeleteUser(id) {\n  this.submitted = true;\n  this.userService.deleteUser(id)\n  .subscribe( success => {\n    this.flashMessagesService.show('User deleted succesfully', \n    { cssClass: 'alert-success', timeout: 3000 });\n    }, error => {\n    this.flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n    });\n    location.reload();\n}\n\n findbyID(id)\n { \n   this.getCheckID = id;\n     this.userService.getUsersById(id)\n      .subscribe(user => this.user = user);\n }\n\n getUsers(val) \n {\n  this.sortval = val;\n    if(this.sortval) \n    {\n          return this.userService.getSortedUsersList(this.sortval)\n        .subscribe(\n        userList => {\n        console.log(userList);\n        this.userList = userList;\n        });\n    }\n    else\n    {\n        return this.userService.getUsersList()\n        .subscribe(\n        userList => {\n        console.log(userList);\n        this.userList = userList;\n        });\n    }\n}\n\n \n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any, filter: any, defaultFilter: boolean): any {\r\n    if (!filter){\r\n      return items;\r\n    }\r\n\r\n    if (!Array.isArray(items)){\r\n      return items;\r\n    }\r\n\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n\r\n      if (defaultFilter) {\r\n        return items.filter(item =>\r\n            filterKeys.reduce((x, keyName) =>\r\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\r\n      }\r\n      else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'findprojectname'\r\n})\r\nexport class FindprojectnamePipe implements PipeTransform {\r\n\r\n  transform(projectId: any, projects?: any): any {\r\n      let projectRetrived = projects.filter(item=>item._id == projectId)[0];\r\n      return !!projectRetrived ? projectRetrived.project : '-' ;\r\n  }\r\n}\r\n  \r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'findtaskname'\r\n})\r\nexport class FindtasknamePipe implements PipeTransform {\r\n\r\n  transform(taskId: any, tasks?: any): any {\r\n    let taskRetrived = tasks.filter(task=>task._id == taskId)[0];\r\n    return !!taskRetrived ? taskRetrived.task : '-' ;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'findusername'\r\n})\r\nexport class FindusernamePipe implements PipeTransform {\r\n\r\n  transform(userId: any, users?: any): any {\r\n    let userRetrived = users.filter(user=>user._id == userId)[0];\r\n    return !!userRetrived ? userRetrived.first_name : '-' ;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private http: HttpClient) { }\n\n  private projectUrl = 'http://localhost:4000/projects';  // URL to web api\n\n  saveProject (project: Project): Observable<Project> {\n    return this.http.post<Project>(this.projectUrl+'/saveProject', project);\n  }\n  \n  getProjectsList (): Observable<Project[]> {\n    return this.http.get<Project[]>(this.projectUrl+'/projectList')\n  }\n\n  getSortedProjectsList (val): Observable<Project[]> {\n    const url = `${this.projectUrl}/sortProject/${val}`;\n    return this.http.get<Project[]>(url)\n  }\n\n  getProjectsById(id: number): Observable<Project> {\n    const url = `${this.projectUrl}/getProject/${id}`;\n    return this.http.get<Project>(url);\n  }\n \n  deleteProject (id: number): Observable<Project> {\n     const url = `${this.projectUrl}/deleteProject/${id}`;\n     return this.http.delete<Project>(url);\n  }\n \n  updateProject (id: number, project: Project): Observable<any> {\n    const url = `${this.projectUrl}/updateProject/${id}`;\n    \n    return this.http.put(url, project);\n  }\n}\n","export class Project {\r\n    project: string;\r\n    start_date: Date;\r\n    end_date: Date;\r\n    priority: number;\r\n    manager: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task } from './task';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  private tasksUrl = 'http://localhost:4000/tasks';  // URL to web api\n\n  saveTask (task: Task): Observable<Task> {\n    return this.http.post<Task>(this.tasksUrl+'/saveTask', task);\n  }\n  \n  getTasksList (): Observable<Task[]> {\n    return this.http.get<Task[]>(this.tasksUrl+'/TaskList')\n  }\n\n  getSortedTasksList (val): Observable<Task[]> {\n    const url = `${this.tasksUrl}/sortTask/${val}`;\n    return this.http.get<Task[]>(url)\n  }\n\n  getTasksById(id): Observable<Task> {\n    const url = `${this.tasksUrl}/getTaskById/${id}`;\n    return this.http.get<Task>(url);\n  }\n  \n  getTasksByProjectId(id): Observable<Task> {\n    const url = `${this.tasksUrl}/getTaskByProject/${id}`;\n    return this.http.get<Task>(url);\n  }\n\n  getTasksBySortProjectId(sort: any,id :any): Observable<Task[]> {\n    console.log('sort' + sort);\n    console.log('id -' + id);\n    const url = `${this.tasksUrl}/getTaskBySortedProject/${sort}/${id}`;\n    return this.http.get<Task[]>(url);\n  }\n\n  deleteTask (id: number): Observable<Task> {\n     const url = `${this.tasksUrl}/deleteTask/${id}`;\n     return this.http.delete<Task>(url);\n  }\n \n  updateTask (id: number, task: Task): Observable<any> {\n    const url = `${this.tasksUrl}/updateTask/${id}`;\n    \n    return this.http.put(url, task);\n  }\n}\n","export class Task {\r\n    project: string;\r\n    task: string;\r\n    priority: number;   \r\n    parent_task: string;\r\n    start_date: Date;\r\n    end_date: Date;\r\n    user: string;\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  private usersUrl = 'http://localhost:4000/users';  // URL to web api\n\n  saveUser (user: User): Observable<User> {\n    return this.http.post<User>(this.usersUrl+'/saveUser', user);\n  }\n  \n  getUsersList (): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl+'/userList')\n  }\n\n  getSortedUsersList (val): Observable<User[]> {\n    const url = `${this.usersUrl}/sortUser/${val}`;\n    return this.http.get<User[]>(url)\n  }\n\n  getUsersById(id): Observable<User> {\n    const url = `${this.usersUrl}/getUser/${id}`;\n    return this.http.get<User>(url);\n  }\n\n\n  deleteUser (id: number): Observable<User> {\n     const url = `${this.usersUrl}/deleteUser/${id}`;\n     return this.http.delete<User>(url);\n  }\n \n  updateUser (id: number, user: User): Observable<any> {\n    const url = `${this.usersUrl}/updateUser/${id}`;\n    \n    return this.http.put(url, user);\n  }\n}\n","export class User {\r\n    first_name: string;\r\n    last_name: string;\r\n    employee_id: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}